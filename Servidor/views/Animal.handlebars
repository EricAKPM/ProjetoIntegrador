<script src="https://cdnjs.cloudflare.com/ajax/libs/parallax/3.1.0/parallax.min.js"></script>
<link rel="stylesheet" href="/Resources/Style/NotFound">

{{> FundoParallax}}

{{> SideBar}}

<section class="home-section" style="position: absolute; top:0">
    <div class="home-content">
        {{> Fundo}}

        <div style="flex: 1; margin-left: 5%;margin-right: 5%;margin-top: 2%;">
            <div class="left-father">
                <div style="flex:1">
                    <img id="FotoUsuario" src="/Resources/Images/Usuario" style="max-width: 350px; max-height: auto;"
                        alt="" />
                </div>
                <div style="flex:1">
                    <p><b>Nome:</b> {{Nome}}</p>
                    <p><b>Especie:</b> {{Especie}}</p>
                    <p><b>Ra√ßa:</b> {{Raca}}</p>
                    <p><b>Cor:</b> {{Cor}}</p>
                    <p><b>Data de nascimento:</b> {{DataNascimento}}</p>
                    <p><b>Porte:</b> {{Porte}}</p>
                    <p><b>Status:</b> {{Status}}</p>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    var colors = new Array(
        [62, 35, 255],
        [60, 255, 60],
        [255, 35, 98],
        [45, 175, 230],
        [255, 0, 255],
        [255, 128, 0]);

    var step = 0;
    //color table indices for: 
    // current color left
    // next color left
    // current color right
    // next color right
    var colorIndices = [0, 1, 2, 3];

    //transition speed
    var gradientSpeed = 0.0002;

    function updateGradient() {

        if ($ === undefined) return;

        var c0_0 = colors[colorIndices[0]];
        var c0_1 = colors[colorIndices[1]];
        var c1_0 = colors[colorIndices[2]];
        var c1_1 = colors[colorIndices[3]];

        var istep = 1 - step;
        var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);
        var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);
        var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);
        var color1 = "rgb(" + r1 + "," + g1 + "," + b1 + ")";

        var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);
        var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);
        var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);
        var color2 = "rgb(" + r2 + "," + g2 + "," + b2 + ")";

        $('#gradient').css({
            background: "-webkit-gradient(linear, left top, right top, from(" + color1 + "), to(" + color2 + "))"
        }).css({
            background: "-moz-linear-gradient(left, " + color1 + " 0%, " + color2 + " 100%)"
        });

        step += gradientSpeed;
        if (step >= 1) {
            step %= 1;
            colorIndices[0] = colorIndices[1];
            colorIndices[2] = colorIndices[3];

            //pick two new target color indices
            //do not pick the same as the current one
            colorIndices[1] = (colorIndices[1] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;
            colorIndices[3] = (colorIndices[3] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;

        }
    }

    setInterval(updateGradient, 10);
</script>

<script>
    var myModal = document.getElementById('myModal')
    var myInput = document.getElementById('myInput')

    myModal.addEventListener('shown.bs.modal', function () {
        myInput.focus()
    })
</script>

<script>
    $("input[id='form1']").on("input", function () {
        $("input[id='form2']").val(destroyMask(this.value));
        this.value = createMask($("input[id='form2']").val());
    })

    $("input[id='form3']").on("input", function () {
        $("input[id='form4']").val(destroyMask(this.value));
        this.value = createMask($("input[id='form4']").val());
    })

    $("#formteste").submit(function (e) {
        e.preventDefault(); // avoid to execute the actual submit of the form.
        var form = $(this);
        console.log('entrou')
        var actionUrl = form.attr('action');
        $.ajax({
            type: "POST",
            url: actionUrl,
            data: form.serialize(), // serializes the form's elements.
            success: function (data) {
                alert(data); // show response from the php script.
            }
        });
    });

    function createMask(string) {
        console.log(string + " " + parseInt(string.length))
        if (string.length >= 11)
            return string.replace(/(\d{2})(\d{1})(\d{4})(\d{4})/, "($1) $2 $3-$4");
        return string.replace(/(\d{2})(\d{4})(\d{4})/, "($1) $2-$3");
    }

    function destroyMask(string) {
        console.log(string)
        return string.replace(/\D/g, '').substring(0, 11);
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
    integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
    integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
    crossorigin="anonymous"></script>

<script>
    let arrow = document.querySelectorAll(".arrow");
    for (var i = 0; i < arrow.length; i++) {
        arrow[i].addEventListener("click", (e) => {
            let arrowParent = e.target.parentElement.parentElement;//selecting main parent of arrow
            arrowParent.classList.toggle("showMenu");
        });
    }
    let sidebar = document.querySelector(".sidebar");
    let sidebarBtn = document.querySelector(".bx-menu");
    console.log(sidebarBtn);
    sidebarBtn.addEventListener("click", () => {
        sidebar.classList.toggle("close");
    });
</script>

<script>
    // Parallax Code
    var scene = document.getElementById('scene');
    var parallax = new Parallax(scene);
</script>